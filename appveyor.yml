version: 10.30.{build}
#skip_tags: true
#os: MinGW
#os: Visual Studio 2015
#os: Default Azure
#build:
#  verbosity: minimal
max_jobs: 4
platform:
  - x64
  - x86
environment:
  matrix:
    - MSVC: 1
    - MINGW: 1
    - CYGWIN: 1
matrix:
  allow_failures:
    - MINGW: 1
clone_depth: 1

init:
  - git config --global core.autocrlf input
  # Disable popups as they hang the build as there is nobody to click on the OK button...
  # Hanging the build is a lot less user friendly than reporting a build failure.
  #
  # Disable of system hard error popup
  # See: https://msdn.microsoft.com/en-us/library/bb513638%28VS.85%29.aspx
  - reg add "HKLM\SYSTEM\CurrentControlSet\Control\Windows" /f /v ErrorMode /d 2
  # Disable the following popup on program failure:
  #     |       ** <program name> has stopped working **        |
  #     | Windows can check online for a solution to the problem|
  #     |  - Check online for a solution and close the program  |
  #     |  - Close the program                                  |
  # See: https://msdn.microsoft.com/en-us/library/bb513638%28VS.85%29.aspx
  - reg add "HKLM\Software\Microsoft\Windows\Windows Error Reporting" /f /v DontShowUI /d 1  
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - if "%PLATFORM%"=="x64" set MSYS64=C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64
  #- if "%PLATFORM%"=="x86" set MSYS64=C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32
  - if "%PLATFORM%"=="x86" set MSYS64=C:\MinGW
  - if "%MINGW%"=="1" set PROCESSOR_ARCHITECTURE=%PLATFORM%
  - if "%PLATFORM%"=="x64" set PROCESSOR_ARCHITECTURE=AMD64
  - if "%PLATFORM%"=="x64" set CCLIBDIR=%MSYS64%\lib
  - if "%MINGW%"=="1" set PATH=%MSYS64%\bin;%PATH%
  - if "%MINGW%"=="1" copy %MSYS64%\bin\mingw32-make.exe %MSYS64%\bin\make.exe
  - if "%MINGW%"=="1" copy %MSYS64%\bin\mingw32-make.exe %MSYS64%\bin\gmake.exe
  - if "%PLATFORM%"=="x86" set WIN64=undef
  - set CYGR=c:\cygwin
  - set CYGSETUP=setup-x86
  - if "%PLATFORM%"=="x64" set CYGR=c:\cygwin64
  - if "%PLATFORM%"=="x64" set CYGSETUP=setup-x86_64
  - choco upgrade cmake
  - set PATH=%PATH%;C:\Program Files\CMake\bin
  - set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if "%CYGWIN%"=="1" set PATH=%CYGR%\bin;%PATH%
  - if "%MSVC%"=="1" call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /%PLATFORM%
  - ps: (New-Object Net.WebClient).DownloadFile('https://cygwin.com/setup-x86.exe', "C:\cygwin\setup-x86.exe")
  - ps: (New-Object Net.WebClient).DownloadFile('https://cygwin.com/setup-x86_64.exe', "C:\cygwin64\setup-x86_64.exe")
  - if "%CYGWIN%"=="1" %CYGR%\%CYGSETUP% -qnNdO -R %CYGR% -s http://cygwin.mirror.constant.com
      -l %CYGR%/var/cache/setup -P cmake,zlib-devel

build_script:
  - if "%MSVC%"=="1"   cmake -DPCRE2_SUPPORT_JIT=ON -G "NMake Makefiles" . & nmake
  - if "%MINGW%"=="1"  cmake -G "MinGW Makefiles" . & make
  - if "%CYGWIN%"=="1" sh -c "./autogen.sh; ./configure --enable-jit --enable-pcre2grep-libz && make"

test_script:
  #- if "%MSVC%"=="1"   msbuild RUN_TESTS.vcxproj
  - if "%MSVC%"=="1"   nmake test
  - if "%MINGW%"=="1"  make -s test
  - if "%CYGWIN%"=="1" make -s check VERBOSE=1

